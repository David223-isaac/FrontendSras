{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a\\\\OneDrive\\\\Desktop\\\\frontend\\\\src\\\\Pages\\\\Administrator\\\\VerAjustadores.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { Table, message } from 'antd';\n// import axios from 'axios';\n\n// const DataQuery = () => {\n\n//   const token = localStorage.getItem('token');\n\n//   const [tableData, setTableData] = useState([]);\n\n//   const fetchUsersData = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:8000/Ajustadores/ConsultarAjustadores',{\n//         headers: {\n//           'Authorization': token,\n//           'Content-Type': 'multipart/form-data',\n//       }\n//       });\n\n//       if (response.status !== 200) {\n//         throw new Error('Error en la solicitud.');\n//       }\n\n//       const data = response.data;\n\n//       if (!Array.isArray(data)) {\n//         throw new Error('Los datos recibidos no son un array válido.');\n//       }\n\n//       setTableData(data);\n//     } catch (error) {\n//       console.error('Error:', error.message);\n//       message.error('Error al consultar los datos.');\n//       setTableData([]);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchUsersData();\n//   }, [token]);\n\n//   const columns = [\n//     {\n//       title: 'Nombre',\n//       dataIndex: 'Nombres',\n//       key: 'Nombres',\n//     },\n//     {\n//       title: 'Apellidos',\n//       dataIndex: 'Apellidos',\n//       key: 'Apellidos',\n//     },\n//     {\n//       title: 'Foto_Perfil',\n//       dataIndex: 'Foto_Perfil',\n//       key: 'Foto_Perfil',\n//       render: (imagen) => (\n//         <img src={`http://localhost:8000/images/${imagen}`} alt=\"Imagen de perfil\" style={{ width: 100 }} />\n//       ),\n//     }\n//   ];\n\n//   return (\n//     <div style={{ padding: '20px' }}>\n//       <Table columns={columns} dataSource={tableData} />\n//     </div>\n//   );\n// };\n\n// export default DataQuery;\n\nimport React, { useEffect, useState } from 'react';\nimport { Table, Button, Modal, notification } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  confirm\n} = Modal;\nconst AjustadoresTable = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // Función para obtener los registros\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/Ajustadores/ConsultarAjustadores'); // Ajusta la ruta según tu API\n        setData(response.data);\n      } catch (error) {\n        notification.error({\n          message: 'Error',\n          description: 'No se pudo obtener los registros'\n        });\n      }\n    };\n    fetchData();\n  }, []);\n  const handleDelete = id => {\n    confirm({\n      title: '¿Estás seguro de que deseas eliminar este registro?',\n      okText: 'Sí',\n      cancelText: 'No',\n      onOk() {\n        axios.delete(`/EliminarAjustadores/${id}`).then(response => {\n          notification.success({\n            message: 'Éxito',\n            description: 'Registro eliminado exitosamente'\n          });\n          // Actualiza el estado para reflejar el cambio en la tabla\n          setData(prevData => prevData.filter(item => item.id !== id));\n        }).catch(error => {\n          notification.error({\n            message: 'Error',\n            description: 'No se pudo eliminar el registro'\n          });\n        });\n      }\n    });\n  };\n  const columns = [{\n    title: 'Nombre',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Apellido',\n    dataIndex: 'surname',\n    key: 'surname'\n  },\n  // Otras columnas...\n  {\n    title: 'Acciones',\n    key: 'actions',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Button, {\n      type: \"danger\",\n      onClick: () => handleDelete(record.id),\n      children: \"Eliminar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: columns,\n    dataSource: data,\n    rowKey: \"id\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(AjustadoresTable, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = AjustadoresTable;\nexport default AjustadoresTable;\nvar _c;\n$RefreshReg$(_c, \"AjustadoresTable\");","map":{"version":3,"names":["React","useEffect","useState","Table","Button","Modal","notification","axios","jsxDEV","_jsxDEV","confirm","AjustadoresTable","_s","data","setData","fetchData","response","get","error","message","description","handleDelete","id","title","okText","cancelText","onOk","delete","then","success","prevData","filter","item","catch","columns","dataIndex","key","render","text","record","type","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","dataSource","rowKey","_c","$RefreshReg$"],"sources":["C:/Users/a/OneDrive/Desktop/frontend/src/Pages/Administrator/VerAjustadores.jsx"],"sourcesContent":["\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Table, message } from 'antd';\r\n// import axios from 'axios';\r\n\r\n// const DataQuery = () => {\r\n\r\n//   const token = localStorage.getItem('token');\r\n\r\n//   const [tableData, setTableData] = useState([]);\r\n\r\n//   const fetchUsersData = async () => {\r\n//     try {\r\n//       const response = await axios.get('http://localhost:8000/Ajustadores/ConsultarAjustadores',{\r\n//         headers: {\r\n//           'Authorization': token,\r\n//           'Content-Type': 'multipart/form-data',\r\n//       }\r\n//       });\r\n\r\n//       if (response.status !== 200) {\r\n//         throw new Error('Error en la solicitud.');\r\n//       }\r\n\r\n//       const data = response.data;\r\n\r\n//       if (!Array.isArray(data)) {\r\n//         throw new Error('Los datos recibidos no son un array válido.');\r\n//       }\r\n\r\n//       setTableData(data);\r\n//     } catch (error) {\r\n//       console.error('Error:', error.message);\r\n//       message.error('Error al consultar los datos.');\r\n//       setTableData([]);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchUsersData();\r\n//   }, [token]);\r\n\r\n//   const columns = [\r\n//     {\r\n//       title: 'Nombre',\r\n//       dataIndex: 'Nombres',\r\n//       key: 'Nombres',\r\n//     },\r\n//     {\r\n//       title: 'Apellidos',\r\n//       dataIndex: 'Apellidos',\r\n//       key: 'Apellidos',\r\n//     },\r\n//     {\r\n//       title: 'Foto_Perfil',\r\n//       dataIndex: 'Foto_Perfil',\r\n//       key: 'Foto_Perfil',\r\n//       render: (imagen) => (\r\n//         <img src={`http://localhost:8000/images/${imagen}`} alt=\"Imagen de perfil\" style={{ width: 100 }} />\r\n//       ),\r\n//     }\r\n//   ];\r\n\r\n//   return (\r\n//     <div style={{ padding: '20px' }}>\r\n//       <Table columns={columns} dataSource={tableData} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DataQuery;\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Modal, notification } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst AjustadoresTable = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Función para obtener los registros\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/Ajustadores/ConsultarAjustadores'); // Ajusta la ruta según tu API\r\n        setData(response.data);\r\n      } catch (error) {\r\n        notification.error({\r\n          message: 'Error',\r\n          description: 'No se pudo obtener los registros',\r\n        });\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    confirm({\r\n      title: '¿Estás seguro de que deseas eliminar este registro?',\r\n      okText: 'Sí',\r\n      cancelText: 'No',\r\n      onOk() {\r\n        axios.delete(`/EliminarAjustadores/${id}`)\r\n          .then(response => {\r\n            notification.success({\r\n              message: 'Éxito',\r\n              description: 'Registro eliminado exitosamente',\r\n            });\r\n            // Actualiza el estado para reflejar el cambio en la tabla\r\n            setData(prevData => prevData.filter(item => item.id !== id));\r\n          })\r\n          .catch(error => {\r\n            notification.error({\r\n              message: 'Error',\r\n              description: 'No se pudo eliminar el registro',\r\n            });\r\n          });\r\n      },\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Nombre',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n    },\r\n    {\r\n      title: 'Apellido',\r\n      dataIndex: 'surname',\r\n      key: 'surname',\r\n    },\r\n    // Otras columnas...\r\n    {\r\n      title: 'Acciones',\r\n      key: 'actions',\r\n      render: (text, record) => (\r\n        <Button\r\n          type=\"danger\"\r\n          onClick={() => handleDelete(record.id)}\r\n        >\r\n          Eliminar\r\n        </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table columns={columns} dataSource={data} rowKey=\"id\" />\r\n  );\r\n};\r\n\r\nexport default AjustadoresTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}