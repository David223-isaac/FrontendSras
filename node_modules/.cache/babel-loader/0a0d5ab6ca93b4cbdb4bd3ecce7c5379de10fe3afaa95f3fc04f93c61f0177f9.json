{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a\\\\OneDrive\\\\Desktop\\\\frontend\\\\src\\\\Pages\\\\Administrator\\\\ConsultarkilometragesGeneral.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Form, Select, Button, Layout } from 'antd';\n// import 'antd/dist/reset.css'; // Importa los estilos de Ant Design\n\n// const { Header, Content, Footer } = Layout;\n// const { Option } = Select;\n\n// const ConsultarkilometragesGeneral = () => {\n//   const token = localStorage.getItem('token');\n\n//   const [ajustadores, setAjustadores] = useState([]);\n//   const [form] = Form.useForm();\n\n//   // Obtiene la lista de ajustadores al cargar el componente\n//   useEffect(() => {\n//     axios.get('http://localhost:8000/Ajustadores/ConsultarAjustadores', {\n//         headers: {\n//             'Authorization': token,\n//             'Content-Type': 'multipart/form-data',\n//           },\n//     })\n//       .then(response => {\n//         setAjustadores(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching ajustadores:', error);\n//       });\n//   }, [token]);\n\n//   const onSearch = () => {\n//     form.validateFields().then(values => {\n//       const { nombreAjustador } = values;\n\n//       if (!nombreAjustador) {\n//         console.error('El nombre del ajustador es requerido');\n//         return;\n//       }\n\n//       axios.get(`http://localhost:8000/Kilometrajes/ConsultarKilometrajesPorAjustador/${nombreAjustador}`, {\n//         headers: {\n//             'Authorization': token,\n//           },\n//       })\n//         .then(response => {\n//           console.log('Resultados:', response.data);\n//         })\n//         .catch(error => {\n//           console.error('Error fetching registros:', error);\n//         });\n//     }).catch(error => {\n//       console.error('Error en la validación del formulario:', error);\n//     });\n//   };\n\n//   return (\n//     <Layout style={{ minHeight: '100vh', backgroundColor: '#19E092' }}>\n//       <Header style={{ backgroundColor: '#1890ff', padding: 0, borderRadius: '20px' }}>\n//         <div style={{ color: 'white', fontSize: '18px', textAlign: 'center' }}>Formulario de Búsqueda</div>\n//       </Header>\n//       <Content style={{ padding: '20px' }}>\n//         <Form\n//           form={form}\n//           layout=\"vertical\"\n//           style={{ maxWidth: '600px', margin: '0 auto', backgroundColor: '#ffffff', padding: '20px', borderRadius: '8px' }}\n//         >\n//           <Form.Item\n//             name=\"nombreAjustador\"\n//             label=\"Nombre del Ajustador\"\n//             rules={[{ required: true, message: 'Por favor, selecciona un ajustador' }]}\n//           >\n//             <Select placeholder=\"Selecciona un ajustador\" allowClear>\n//               {ajustadores.map(ajustador => (\n//                 <Option key={ajustador.id} value = {`${ajustador.Nombres} ${ajustador.Apellidos}`}>\n//                   {`${ajustador.Nombres} ${ajustador.Apellidos}`}\n//                 </Option>\n//               ))}\n//             </Select>\n//           </Form.Item>\n\n//           <Form.Item>\n//             <Button type=\"primary\" onClick={onSearch}>Buscar</Button>\n//           </Form.Item>\n//         </Form>\n//       </Content>\n//       <Footer style={{ textAlign: 'center' }}>David Isaac ©2024</Footer>\n//     </Layout>\n//   );\n// };\n\n// export default ConsultarkilometragesGeneral;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Form, Select, Button, Layout, Table } from 'antd';\n// import 'antd/dist/reset.css'; // Importa los estilos de Ant Design\n\n// const { Header, Content, Footer } = Layout;\n// const { Option } = Select;\n\n// const ConsultarkilometragesGeneral = () => {\n//   const token = localStorage.getItem('token');\n\n//   const [ajustadores, setAjustadores] = useState([]);\n//   const [kilometrajes, setKilometrajes] = useState([]); // Estado para almacenar los datos de kilometrajes\n//   const [form] = Form.useForm();\n\n//   // Obtiene la lista de ajustadores al cargar el componente\n//   useEffect(() => {\n//     axios.get('http://localhost:8000/Ajustadores/ConsultarAjustadores', {\n//         headers: {\n//             'Authorization': token,\n//             'Content-Type': 'multipart/form-data',\n//           },\n//     })\n//       .then(response => {\n//         setAjustadores(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching ajustadores:', error);\n//       });\n//   }, [token]);\n\n//   const onSearch = () => {\n//     form.validateFields().then(values => {\n//       const { nombreAjustador } = values;\n\n//       if (!nombreAjustador) {\n//         console.error('El nombre del ajustador es requerido');\n//         return;\n//       }\n\n//       axios.get(`http://localhost:8000/Kilometrajes/ConsultarKilometrajesPorAjustador/${nombreAjustador}`, {\n//         headers: {\n//             'Authorization': token,\n//           },\n//       })\n//         .then(response => {\n//           setKilometrajes(response.data); // Actualiza el estado con los datos obtenidos\n//         })\n//         .catch(error => {\n//           console.error('Error fetching registros:', error);\n//         });\n//     }).catch(error => {\n//       console.error('Error en la validación del formulario:', error);\n//     });\n//   };\n\n//   // Definir columnas para la tabla\n//   const columns = [\n//     {\n//       title: 'ID',\n//       dataIndex: 'id',\n//       key: 'id',\n//     },\n//     {\n//       title: 'Fecha',\n//       dataIndex: 'fecha',\n//       key: 'fecha',\n//     },\n//     {\n//       title: 'Kilometraje',\n//       dataIndex: 'kilometraje',\n//       key: 'kilometraje',\n//     },\n//     // Agrega aquí más columnas según la estructura de tus datos\n//   ];\n\n//   return (\n//     <Layout style={{ minHeight: '100vh', backgroundColor: '#19E092' }}>\n//       <Header style={{ backgroundColor: 'black', padding: 0, borderRadius: '20px' }}>\n//         <div style={{ color: 'white', fontSize: '18px', textAlign: 'center' }}>Consulta de kilometrajes</div>\n//       </Header>\n//       <div className=\"circle-background\" style={{ position: 'absolute', marginTop: '-50px', marginLeft: '10px' }}></div>\n//     <div style={{textAlign: 'center', marginTop: '2rem', marginBottom: '2rem'}}>\n//     <img src=\"https://cdn.icon-icons.com/icons2/1483/PNG/512/internetspeed_102161.png\" alt=\"Icon\"\n//     style={{maxWidth: '130px'}}></img>\n//     </div>\n//       <Content style={{ padding: '20px' }}>\n\n//         <Form\n//           form={form}\n//           layout=\"vertical\"\n//           style={{ maxWidth: '600px', margin: '0 auto', backgroundColor: '#ffffff', padding: '20px', borderRadius: '8px' }}\n//         >\n//           <Form.Item\n//             name=\"nombreAjustador\"\n//             label=\"Nombre del Ajustador\"\n//             rules={[{ required: true, message: 'Por favor, selecciona un ajustador' }]}\n//           >\n//             <Select placeholder=\"Selecciona un ajustador\" allowClear>\n//               {ajustadores.map(ajustador => (\n//                 <Option key={ajustador.id} value={`${ajustador.Nombres} ${ajustador.Apellidos}`}>\n//                   {`${ajustador.Nombres} ${ajustador.Apellidos}`}\n//                 </Option>\n//               ))}\n//             </Select>\n//           </Form.Item>\n\n//           <Form.Item>\n//             <Button type=\"primary\" onClick={onSearch}>Buscar</Button>\n//           </Form.Item>\n//         </Form>\n\n//         {/* Mostrar la tabla solo si hay datos */}\n//         {kilometrajes.length >= 0 && (\n//           <Table\n//             dataSource={kilometrajes}\n//             columns={columns}\n//             rowKey=\"id\"\n//             style={{ marginTop: '20px' }}\n//           />\n//         )}\n//       </Content>\n//       <Footer style={{ textAlign: 'center' }}>David Isaac ©2024</Footer>\n//     </Layout>\n//   );\n// };\n\n// export default ConsultarkilometragesGeneral;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Form, Select, Button, Layout, Table } from 'antd';\nimport * as XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\nimport 'antd/dist/reset.css'; // Importa los estilos de Ant Design\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Content,\n  Footer\n} = Layout;\nconst {\n  Option\n} = Select;\nconst ConsultarkilometragesGeneral = () => {\n  _s();\n  const token = localStorage.getItem('token');\n  const [ajustadores, setAjustadores] = useState([]);\n  const [kilometrajes, setKilometrajes] = useState([]); // Estado para almacenar los datos de kilometrajes\n  const [form] = Form.useForm();\n\n  // Obtiene la lista de ajustadores al cargar el componente\n  useEffect(() => {\n    axios.get('http://localhost:8000/Ajustadores/ConsultarAjustadores', {\n      headers: {\n        'Authorization': token,\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      setAjustadores(response.data);\n    }).catch(error => {\n      console.error('Error fetching ajustadores:', error);\n    });\n  }, [token]);\n  const onSearch = () => {\n    form.validateFields().then(values => {\n      const {\n        nombreAjustador\n      } = values;\n      if (!nombreAjustador) {\n        console.error('El nombre del ajustador es requerido');\n        return;\n      }\n      axios.get(`http://localhost:8000/Kilometrajes/ConsultarKilometrajesPorAjustador/${nombreAjustador}`, {\n        headers: {\n          'Authorization': token\n        }\n      }).then(response => {\n        // Verifica que response.data.data sea un array\n        if (Array.isArray(response.data.data)) {\n          setKilometrajes(response.data.data);\n        } else {\n          console.error('Los datos recibidos no son un array:', response.data.data);\n        }\n      }).catch(error => {\n        console.error('Error fetching registros:', error);\n      });\n    }).catch(error => {\n      console.error('Error en la validación del formulario:', error);\n    });\n  };\n\n  // Definir columnas para la tabla\n  const columns = [{\n    title: 'Kilometraje registrado',\n    dataIndex: 'KilometrajeRegistrado',\n    key: 'KilometrajeRegistrado'\n  }, {\n    title: 'Fecha de registro',\n    dataIndex: 'FechaDeRegistro',\n    key: 'FechaDeRegistro'\n  }, {\n    title: 'Ajustador',\n    dataIndex: 'AjustadorQueRegistra',\n    key: 'AjustadorQueRegistra'\n  }\n  // Agrega aquí más columnas según la estructura de tus datos\n  ];\n  const exportToExcel = () => {\n    if (kilometrajes.length === 0) {\n      console.error('No hay datos para exportar');\n      return;\n    }\n    const ws = XLSX.utils.json_to_sheet(kilometrajes);\n    const wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Kilometrajes');\n    const wbout = XLSX.write(wb, {\n      bookType: 'xlsx',\n      type: 'array'\n    });\n    saveAs(new Blob([wbout], {\n      type: 'application/octet-stream'\n    }), 'kilometrajes.xlsx');\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    style: {\n      minHeight: '100vh',\n      backgroundColor: '#19E092'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      style: {\n        backgroundColor: 'black',\n        padding: 0,\n        borderRadius: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'white',\n          fontSize: '18px',\n          textAlign: 'center'\n        },\n        children: \"Consulta de kilometrajes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circle-background\",\n      style: {\n        position: 'absolute',\n        marginTop: '-50px',\n        marginLeft: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '2rem',\n        marginBottom: '2rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://cdn.icon-icons.com/icons2/1483/PNG/512/internetspeed_102161.png\",\n        alt: \"Icon\",\n        style: {\n          maxWidth: '130px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      style: {\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        layout: \"vertical\",\n        style: {\n          maxWidth: '600px',\n          margin: '0 auto',\n          backgroundColor: '#ffffff',\n          padding: '20px',\n          borderRadius: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"nombreAjustador\",\n          label: \"Nombre del Ajustador\",\n          rules: [{\n            required: true,\n            message: 'Por favor, selecciona un ajustador'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Selecciona un ajustador\",\n            allowClear: true,\n            children: ajustadores.map(ajustador => /*#__PURE__*/_jsxDEV(Option, {\n              value: `${ajustador.Nombres} ${ajustador.Apellidos}`,\n              children: `${ajustador.Nombres} ${ajustador.Apellidos}`\n            }, ajustador.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: onSearch,\n            children: \"Buscar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"default\",\n        onClick: exportToExcel,\n        disabled: kilometrajes.length === 0 // Deshabilitar el botón si no hay datos\n        ,\n        style: {\n          marginTop: '20px'\n        },\n        children: \"Exportar a Excel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        dataSource: kilometrajes,\n        columns: columns,\n        rowKey: \"id\",\n        style: {\n          marginTop: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"David Isaac \\xA92024\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 5\n  }, this);\n};\n_s(ConsultarkilometragesGeneral, \"wzsrCY0gYo2BsFv3+5hJwJigeUo=\", false, function () {\n  return [Form.useForm];\n});\n_c = ConsultarkilometragesGeneral;\nexport default ConsultarkilometragesGeneral;\nvar _c;\n$RefreshReg$(_c, \"ConsultarkilometragesGeneral\");","map":{"version":3,"names":["React","useState","useEffect","axios","Form","Select","Button","Layout","Table","XLSX","saveAs","jsxDEV","_jsxDEV","Header","Content","Footer","Option","ConsultarkilometragesGeneral","_s","token","localStorage","getItem","ajustadores","setAjustadores","kilometrajes","setKilometrajes","form","useForm","get","headers","then","response","data","catch","error","console","onSearch","validateFields","values","nombreAjustador","Array","isArray","columns","title","dataIndex","key","exportToExcel","length","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","wbout","write","bookType","type","Blob","style","minHeight","backgroundColor","children","padding","borderRadius","color","fontSize","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","className","position","marginTop","marginLeft","marginBottom","src","alt","maxWidth","layout","margin","Item","name","label","rules","required","message","placeholder","allowClear","map","ajustador","value","Nombres","Apellidos","id","onClick","disabled","dataSource","rowKey","_c","$RefreshReg$"],"sources":["C:/Users/a/OneDrive/Desktop/frontend/src/Pages/Administrator/ConsultarkilometragesGeneral.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { Form, Select, Button, Layout } from 'antd';\r\n// import 'antd/dist/reset.css'; // Importa los estilos de Ant Design\r\n\r\n// const { Header, Content, Footer } = Layout;\r\n// const { Option } = Select;\r\n\r\n// const ConsultarkilometragesGeneral = () => {\r\n//   const token = localStorage.getItem('token');\r\n  \r\n//   const [ajustadores, setAjustadores] = useState([]);\r\n//   const [form] = Form.useForm();\r\n\r\n//   // Obtiene la lista de ajustadores al cargar el componente\r\n//   useEffect(() => {\r\n//     axios.get('http://localhost:8000/Ajustadores/ConsultarAjustadores', {\r\n//         headers: {\r\n//             'Authorization': token,\r\n//             'Content-Type': 'multipart/form-data',\r\n//           },\r\n//     })\r\n//       .then(response => {\r\n//         setAjustadores(response.data);\r\n//       })\r\n//       .catch(error => {\r\n//         console.error('Error fetching ajustadores:', error);\r\n//       });\r\n//   }, [token]);\r\n\r\n//   const onSearch = () => {\r\n//     form.validateFields().then(values => {\r\n//       const { nombreAjustador } = values;\r\n\r\n//       if (!nombreAjustador) {\r\n//         console.error('El nombre del ajustador es requerido');\r\n//         return;\r\n//       }\r\n\r\n//       axios.get(`http://localhost:8000/Kilometrajes/ConsultarKilometrajesPorAjustador/${nombreAjustador}`, {\r\n//         headers: {\r\n//             'Authorization': token,\r\n//           },\r\n//       })\r\n//         .then(response => {\r\n//           console.log('Resultados:', response.data);\r\n//         })\r\n//         .catch(error => {\r\n//           console.error('Error fetching registros:', error);\r\n//         });\r\n//     }).catch(error => {\r\n//       console.error('Error en la validación del formulario:', error);\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <Layout style={{ minHeight: '100vh', backgroundColor: '#19E092' }}>\r\n//       <Header style={{ backgroundColor: '#1890ff', padding: 0, borderRadius: '20px' }}>\r\n//         <div style={{ color: 'white', fontSize: '18px', textAlign: 'center' }}>Formulario de Búsqueda</div>\r\n//       </Header>\r\n//       <Content style={{ padding: '20px' }}>\r\n//         <Form\r\n//           form={form}\r\n//           layout=\"vertical\"\r\n//           style={{ maxWidth: '600px', margin: '0 auto', backgroundColor: '#ffffff', padding: '20px', borderRadius: '8px' }}\r\n//         >\r\n//           <Form.Item\r\n//             name=\"nombreAjustador\"\r\n//             label=\"Nombre del Ajustador\"\r\n//             rules={[{ required: true, message: 'Por favor, selecciona un ajustador' }]}\r\n//           >\r\n//             <Select placeholder=\"Selecciona un ajustador\" allowClear>\r\n//               {ajustadores.map(ajustador => (\r\n//                 <Option key={ajustador.id} value = {`${ajustador.Nombres} ${ajustador.Apellidos}`}>\r\n//                   {`${ajustador.Nombres} ${ajustador.Apellidos}`}\r\n//                 </Option>\r\n//               ))}\r\n//             </Select>\r\n//           </Form.Item>\r\n\r\n//           <Form.Item>\r\n//             <Button type=\"primary\" onClick={onSearch}>Buscar</Button>\r\n//           </Form.Item>\r\n//         </Form>\r\n//       </Content>\r\n//       <Footer style={{ textAlign: 'center' }}>David Isaac ©2024</Footer>\r\n//     </Layout>\r\n//   );\r\n// };\r\n\r\n// export default ConsultarkilometragesGeneral;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { Form, Select, Button, Layout, Table } from 'antd';\r\n// import 'antd/dist/reset.css'; // Importa los estilos de Ant Design\r\n\r\n// const { Header, Content, Footer } = Layout;\r\n// const { Option } = Select;\r\n\r\n// const ConsultarkilometragesGeneral = () => {\r\n//   const token = localStorage.getItem('token');\r\n  \r\n//   const [ajustadores, setAjustadores] = useState([]);\r\n//   const [kilometrajes, setKilometrajes] = useState([]); // Estado para almacenar los datos de kilometrajes\r\n//   const [form] = Form.useForm();\r\n\r\n//   // Obtiene la lista de ajustadores al cargar el componente\r\n//   useEffect(() => {\r\n//     axios.get('http://localhost:8000/Ajustadores/ConsultarAjustadores', {\r\n//         headers: {\r\n//             'Authorization': token,\r\n//             'Content-Type': 'multipart/form-data',\r\n//           },\r\n//     })\r\n//       .then(response => {\r\n//         setAjustadores(response.data);\r\n//       })\r\n//       .catch(error => {\r\n//         console.error('Error fetching ajustadores:', error);\r\n//       });\r\n//   }, [token]);\r\n\r\n//   const onSearch = () => {\r\n//     form.validateFields().then(values => {\r\n//       const { nombreAjustador } = values;\r\n\r\n//       if (!nombreAjustador) {\r\n//         console.error('El nombre del ajustador es requerido');\r\n//         return;\r\n//       }\r\n\r\n//       axios.get(`http://localhost:8000/Kilometrajes/ConsultarKilometrajesPorAjustador/${nombreAjustador}`, {\r\n//         headers: {\r\n//             'Authorization': token,\r\n//           },\r\n//       })\r\n//         .then(response => {\r\n//           setKilometrajes(response.data); // Actualiza el estado con los datos obtenidos\r\n//         })\r\n//         .catch(error => {\r\n//           console.error('Error fetching registros:', error);\r\n//         });\r\n//     }).catch(error => {\r\n//       console.error('Error en la validación del formulario:', error);\r\n//     });\r\n//   };\r\n\r\n//   // Definir columnas para la tabla\r\n//   const columns = [\r\n//     {\r\n//       title: 'ID',\r\n//       dataIndex: 'id',\r\n//       key: 'id',\r\n//     },\r\n//     {\r\n//       title: 'Fecha',\r\n//       dataIndex: 'fecha',\r\n//       key: 'fecha',\r\n//     },\r\n//     {\r\n//       title: 'Kilometraje',\r\n//       dataIndex: 'kilometraje',\r\n//       key: 'kilometraje',\r\n//     },\r\n//     // Agrega aquí más columnas según la estructura de tus datos\r\n//   ];\r\n\r\n//   return (\r\n//     <Layout style={{ minHeight: '100vh', backgroundColor: '#19E092' }}>\r\n//       <Header style={{ backgroundColor: 'black', padding: 0, borderRadius: '20px' }}>\r\n//         <div style={{ color: 'white', fontSize: '18px', textAlign: 'center' }}>Consulta de kilometrajes</div>\r\n//       </Header>\r\n//       <div className=\"circle-background\" style={{ position: 'absolute', marginTop: '-50px', marginLeft: '10px' }}></div>\r\n//     <div style={{textAlign: 'center', marginTop: '2rem', marginBottom: '2rem'}}>\r\n//     <img src=\"https://cdn.icon-icons.com/icons2/1483/PNG/512/internetspeed_102161.png\" alt=\"Icon\"\r\n//     style={{maxWidth: '130px'}}></img>\r\n//     </div>\r\n//       <Content style={{ padding: '20px' }}>\r\n        \r\n//         <Form\r\n//           form={form}\r\n//           layout=\"vertical\"\r\n//           style={{ maxWidth: '600px', margin: '0 auto', backgroundColor: '#ffffff', padding: '20px', borderRadius: '8px' }}\r\n//         >\r\n//           <Form.Item\r\n//             name=\"nombreAjustador\"\r\n//             label=\"Nombre del Ajustador\"\r\n//             rules={[{ required: true, message: 'Por favor, selecciona un ajustador' }]}\r\n//           >\r\n//             <Select placeholder=\"Selecciona un ajustador\" allowClear>\r\n//               {ajustadores.map(ajustador => (\r\n//                 <Option key={ajustador.id} value={`${ajustador.Nombres} ${ajustador.Apellidos}`}>\r\n//                   {`${ajustador.Nombres} ${ajustador.Apellidos}`}\r\n//                 </Option>\r\n//               ))}\r\n//             </Select>\r\n//           </Form.Item>\r\n\r\n//           <Form.Item>\r\n//             <Button type=\"primary\" onClick={onSearch}>Buscar</Button>\r\n//           </Form.Item>\r\n//         </Form>\r\n\r\n//         {/* Mostrar la tabla solo si hay datos */}\r\n//         {kilometrajes.length >= 0 && (\r\n//           <Table\r\n//             dataSource={kilometrajes}\r\n//             columns={columns}\r\n//             rowKey=\"id\"\r\n//             style={{ marginTop: '20px' }}\r\n//           />\r\n//         )}\r\n//       </Content>\r\n//       <Footer style={{ textAlign: 'center' }}>David Isaac ©2024</Footer>\r\n//     </Layout>\r\n//   );\r\n// };\r\n\r\n// export default ConsultarkilometragesGeneral;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Select, Button, Layout, Table } from 'antd';\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\nimport 'antd/dist/reset.css'; // Importa los estilos de Ant Design\r\n\r\nconst { Header, Content, Footer } = Layout;\r\nconst { Option } = Select;\r\n\r\nconst ConsultarkilometragesGeneral = () => {\r\n  const token = localStorage.getItem('token');\r\n  \r\n  const [ajustadores, setAjustadores] = useState([]);\r\n  const [kilometrajes, setKilometrajes] = useState([]); // Estado para almacenar los datos de kilometrajes\r\n  const [form] = Form.useForm();\r\n\r\n  // Obtiene la lista de ajustadores al cargar el componente\r\n  useEffect(() => {\r\n    axios.get('http://localhost:8000/Ajustadores/ConsultarAjustadores', {\r\n        headers: {\r\n            'Authorization': token,\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n    })\r\n      .then(response => {\r\n        setAjustadores(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching ajustadores:', error);\r\n      });\r\n  }, [token]);\r\n\r\n  const onSearch = () => {\r\n    form.validateFields().then(values => {\r\n      const { nombreAjustador } = values;\r\n\r\n      if (!nombreAjustador) {\r\n        console.error('El nombre del ajustador es requerido');\r\n        return;\r\n      }\r\n\r\n      axios.get(`http://localhost:8000/Kilometrajes/ConsultarKilometrajesPorAjustador/${nombreAjustador}`, {\r\n        headers: {\r\n            'Authorization': token,\r\n          },\r\n      })\r\n        .then(response => {\r\n          // Verifica que response.data.data sea un array\r\n          if (Array.isArray(response.data.data)) {\r\n            setKilometrajes(response.data.data);\r\n          } else {\r\n            console.error('Los datos recibidos no son un array:', response.data.data);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching registros:', error);\r\n        });\r\n    }).catch(error => {\r\n      console.error('Error en la validación del formulario:', error);\r\n    });\r\n  };\r\n\r\n  // Definir columnas para la tabla\r\n  const columns = [\r\n    {\r\n      title: 'Kilometraje registrado',\r\n      dataIndex: 'KilometrajeRegistrado',\r\n      key: 'KilometrajeRegistrado',\r\n    },\r\n    {\r\n      title: 'Fecha de registro',\r\n      dataIndex: 'FechaDeRegistro',\r\n      key: 'FechaDeRegistro',\r\n    },\r\n    {\r\n      title: 'Ajustador',\r\n      dataIndex: 'AjustadorQueRegistra',\r\n      key: 'AjustadorQueRegistra',\r\n    },\r\n    // Agrega aquí más columnas según la estructura de tus datos\r\n  ];\r\n\r\n  const exportToExcel = () => {\r\n    if (kilometrajes.length === 0) {\r\n      console.error('No hay datos para exportar');\r\n      return;\r\n    }\r\n\r\n    const ws = XLSX.utils.json_to_sheet(kilometrajes);\r\n    const wb = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, 'Kilometrajes');\r\n    const wbout = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n\r\n    saveAs(new Blob([wbout], { type: 'application/octet-stream' }), 'kilometrajes.xlsx');\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ minHeight: '100vh', backgroundColor: '#19E092' }}>\r\n      <Header style={{ backgroundColor: 'black', padding: 0, borderRadius: '20px' }}>\r\n        <div style={{ color: 'white', fontSize: '18px', textAlign: 'center' }}>Consulta de kilometrajes</div>\r\n      </Header>\r\n      <div className=\"circle-background\" style={{ position: 'absolute', marginTop: '-50px', marginLeft: '10px' }}></div>\r\n      <div style={{textAlign: 'center', marginTop: '2rem', marginBottom: '2rem'}}>\r\n        <img src=\"https://cdn.icon-icons.com/icons2/1483/PNG/512/internetspeed_102161.png\" alt=\"Icon\"\r\n        style={{maxWidth: '130px'}}></img>\r\n      </div>\r\n      <Content style={{ padding: '20px' }}>\r\n        <Form\r\n          form={form}\r\n          layout=\"vertical\"\r\n          style={{ maxWidth: '600px', margin: '0 auto', backgroundColor: '#ffffff', padding: '20px', borderRadius: '8px' }}\r\n        >\r\n          <Form.Item\r\n            name=\"nombreAjustador\"\r\n            label=\"Nombre del Ajustador\"\r\n            rules={[{ required: true, message: 'Por favor, selecciona un ajustador' }]}\r\n          >\r\n            <Select placeholder=\"Selecciona un ajustador\" allowClear>\r\n              {ajustadores.map(ajustador => (\r\n                <Option key={ajustador.id} value={`${ajustador.Nombres} ${ajustador.Apellidos}`}>\r\n                  {`${ajustador.Nombres} ${ajustador.Apellidos}`}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" onClick={onSearch}>Buscar</Button>\r\n          </Form.Item>\r\n        </Form>\r\n\r\n        <Button \r\n          type=\"default\" \r\n          onClick={exportToExcel}\r\n          disabled={kilometrajes.length === 0} // Deshabilitar el botón si no hay datos\r\n          style={{ marginTop: '20px' }}\r\n        >\r\n          Exportar a Excel\r\n        </Button>\r\n\r\n        <Table\r\n          dataSource={kilometrajes}\r\n          columns={columns}\r\n          rowKey=\"id\"\r\n          style={{ marginTop: '20px' }}\r\n        />\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}>David Isaac ©2024</Footer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ConsultarkilometragesGeneral;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAUA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,MAAM;AAC1D,OAAO,KAAKC,IAAI,MAAM,MAAM;AAC5B,SAASC,MAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}