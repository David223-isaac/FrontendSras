{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a\\\\Desktop\\\\frontend\\\\src\\\\Pages\\\\Ajuster\\\\RegistrarSiniestro.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Input, DatePicker, Button, message } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistroSiniestroForm = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const onFinish = async values => {\n    setLoading(true);\n    try {\n      const jsonData = JSON.stringify(values); // Serializar los datos como JSON\n      await axios.post('http://localhost:8000/Siniestros/RegistrarSiniestro', jsonData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      message.success('Siniestro registrado correctamente');\n    } catch (error) {\n      message.error('Error al registrar el siniestro');\n    }\n    setLoading(false);\n  };\n\n  // Función para formatear la fecha al formato YYYY-MM-DD\n  const dateFormatter = (value, formatString) => {\n    return value.format('YYYY-MM-DD');\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    layout: \"vertical\",\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"Numero_Siniestro\",\n      label: \"N\\xFAmero de Siniestro\",\n      rules: [{\n        required: true,\n        message: 'Por favor ingresa el número de siniestro'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"Fecha_Ocurrido\",\n      label: \"Fecha de Ocurrencia\",\n      rules: [{\n        required: true,\n        message: 'Por favor selecciona la fecha de ocurrencia'\n      }],\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        format: \"YYYY-MM-DD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: loading,\n        children: \"Registrar Siniestro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(RegistroSiniestroForm, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n_c = RegistroSiniestroForm;\nexport default RegistroSiniestroForm;\nvar _c;\n$RefreshReg$(_c, \"RegistroSiniestroForm\");","map":{"version":3,"names":["React","useState","Form","Input","DatePicker","Button","message","axios","jsxDEV","_jsxDEV","RegistroSiniestroForm","_s","loading","setLoading","onFinish","values","jsonData","JSON","stringify","post","headers","success","error","dateFormatter","value","formatString","format","layout","children","Item","name","label","rules","required","fileName","_jsxFileName","lineNumber","columnNumber","type","htmlType","_c","$RefreshReg$"],"sources":["C:/Users/a/Desktop/frontend/src/Pages/Ajuster/RegistrarSiniestro.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Input, DatePicker, Button, message } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst RegistroSiniestroForm = () => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const onFinish = async (values) => {\r\n        setLoading(true);\r\n        try {\r\n            const jsonData = JSON.stringify(values); // Serializar los datos como JSON\r\n            await axios.post('http://localhost:8000/Siniestros/RegistrarSiniestro', jsonData, {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            message.success('Siniestro registrado correctamente');\r\n        } catch (error) {\r\n            message.error('Error al registrar el siniestro');\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    // Función para formatear la fecha al formato YYYY-MM-DD\r\n    const dateFormatter = (value, formatString) => {\r\n        return value.format('YYYY-MM-DD');\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            layout=\"vertical\"\r\n            onFinish={onFinish}\r\n        >\r\n            {/* Campos de formulario */}\r\n            <Form.Item\r\n                name=\"Numero_Siniestro\"\r\n                label=\"Número de Siniestro\"\r\n                rules={[{ required: true, message: 'Por favor ingresa el número de siniestro' }]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"Fecha_Ocurrido\"\r\n                label=\"Fecha de Ocurrencia\"\r\n                rules={[{ required: true, message: 'Por favor selecciona la fecha de ocurrencia' }]}\r\n            >\r\n                <DatePicker format=\"YYYY-MM-DD\" />\r\n            </Form.Item>\r\n            {/* Otros campos de formulario */}\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                    Registrar Siniestro\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default RegistroSiniestroForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,KAAK,EAAEC,UAAU,EAAEC,MAAM,EAAEC,OAAO,QAAQ,MAAM;AAC/D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMa,QAAQ,GAAG,MAAOC,MAAM,IAAK;IAC/BF,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,MAAMG,QAAQ,GAAGC,IAAI,CAACC,SAAS,CAACH,MAAM,CAAC,CAAC,CAAC;MACzC,MAAMR,KAAK,CAACY,IAAI,CAAC,qDAAqD,EAAEH,QAAQ,EAAE;QAC9EI,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACFd,OAAO,CAACe,OAAO,CAAC,oCAAoC,CAAC;IACzD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZhB,OAAO,CAACgB,KAAK,CAAC,iCAAiC,CAAC;IACpD;IACAT,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;;EAED;EACA,MAAMU,aAAa,GAAGA,CAACC,KAAK,EAAEC,YAAY,KAAK;IAC3C,OAAOD,KAAK,CAACE,MAAM,CAAC,YAAY,CAAC;EACrC,CAAC;EAED,oBACIjB,OAAA,CAACP,IAAI;IACDyB,MAAM,EAAC,UAAU;IACjBb,QAAQ,EAAEA,QAAS;IAAAc,QAAA,gBAGnBnB,OAAA,CAACP,IAAI,CAAC2B,IAAI;MACNC,IAAI,EAAC,kBAAkB;MACvBC,KAAK,EAAC,wBAAqB;MAC3BC,KAAK,EAAE,CAAC;QAAEC,QAAQ,EAAE,IAAI;QAAE3B,OAAO,EAAE;MAA2C,CAAC,CAAE;MAAAsB,QAAA,eAEjFnB,OAAA,CAACN,KAAK;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACZ5B,OAAA,CAACP,IAAI,CAAC2B,IAAI;MACNC,IAAI,EAAC,gBAAgB;MACrBC,KAAK,EAAC,qBAAqB;MAC3BC,KAAK,EAAE,CAAC;QAAEC,QAAQ,EAAE,IAAI;QAAE3B,OAAO,EAAE;MAA8C,CAAC,CAAE;MAAAsB,QAAA,eAEpFnB,OAAA,CAACL,UAAU;QAACsB,MAAM,EAAC;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eAEZ5B,OAAA,CAACP,IAAI,CAAC2B,IAAI;MAAAD,QAAA,eACNnB,OAAA,CAACJ,MAAM;QAACiC,IAAI,EAAC,SAAS;QAACC,QAAQ,EAAC,QAAQ;QAAC3B,OAAO,EAAEA,OAAQ;QAAAgB,QAAA,EAAC;MAE3D;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEf,CAAC;AAAC1B,EAAA,CApDID,qBAAqB;AAAA8B,EAAA,GAArB9B,qBAAqB;AAsD3B,eAAeA,qBAAqB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}